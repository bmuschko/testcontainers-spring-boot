buildscript {
   repositories {
       gradlePluginPortal()
   }

   dependencies {
       classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.6.RELEASE'
       classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
   }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
version = '1.0'

repositories {
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtime 'com.h2database:h2'
    runtime 'org.postgresql:postgresql:42.2.5'
    def junitJupiterVersion = '5.3.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation 'com.squareup.okhttp3:okhttp:3.11.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.10.1'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty 'distribution.dir', bootJar.destinationDir
    systemProperty 'archive.name', bootJar.archiveName
}

test.dependsOn assemble